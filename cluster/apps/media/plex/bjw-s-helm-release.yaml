apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m
  dependsOn:
    - name: traefik
      namespace: networking
    - name: cert-manager
      namespace: cert-manager
    - name: longhorn
      namespace: longhorn-system
  values:
    defaultPodOptions:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64

    controllers:
      # backup:
      #   enabled: false
      #   nameOverride: backup
      #   type: cronjob
      #   cronjob:
      #     schedule: 0 */6 * * *
      #     backoffLimit: 3
      #   containers:
      #     main:
      #       enabled: true
      #       image:
      #         repository: eeacms/rsync
      #         tag: latest
      #       command:
      #         - /bin/sh
      #       args: # copy from container to nas
      #         - -c
      #         - "rsync -a /copy/. /nas/"
      main:
        # initContainers:
        #   loader:
        #     enabled: false
        #     image:
        #       repository: eeacms/rsync
        #       tag: latest
        #     command:
        #       - /bin/sh
        #     args: # copy from nas to container
        #       - -c
        #       # - "cp -r -a /nas/. /copy/"
        #       - "rsync -a /nas/. /copy/"
        #       # - -r
        #       # - -a
        #       # - /nas/.
        #       # - /copy/
        containers:
          main:
            image:
              repository: plexinc/pms-docker
              tag: 1.40.1.8227-c0dd5a73e
            env:
              TZ: America/Denver
              ALLOWED_NETWORKS: 192.168.1.0/255.255.255.0
              HOSTNAME: HancockPlex
            probes:
              liveness:
                type: HTTP
                path: /web/index.html
              readiness:
                type: HTTP
                path: /web/index.html
              startup:
                type: HTTP
                path: /web/index.html
          # unloader:
          #   enabled: false
          #   image:
          #     repository: eeacms/rsync
          #     tag: latest
          #   command:
          #     - /bin/sh
          #   args:
          #     - -c
          #     # - "while true; do sleep 60 && cp -r -a /copy/. /nas/ ; done;"
          #     # - "trap : TERM INT; while true; do sleep 30 && cp -r -a /copy/. /nas/ ; done;"
          #     - "trap : TERM INT; while true; do sleep 30 && rsync -a /copy/. /nas/ ; done;"
          #   # lifecycle:
          #   #   preStop:  # when pod is stopping
          #   #     exec:
          #   #       command: # copy from container back to nas 
          #   #         - /bin/sh
          #   #         - -c
          #   #         - "cp -r -a /copy/. /nas/"

    service:
      main:
        type: NodePort
        ports:
          http:
            port: 32400
            # nodePort: 32400

    ingress:
      main:
        enabled: true
        annotations: 
          kubernetes.io/ingress.class: traefik 
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          external-dns/is-public: "true"
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          hajimari.io/appName: Plex
          hajimari.io/enable: "true"
          hajimari.io/icon: plex
        hosts:
          - host: plex.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
        tls:
          - hosts:
              - plex.${SECRET_DOMAIN}
            secretName: plex-tls

    persistence:
      media:
        enabled: true
        type: nfs
        server: ${NAS_ADDRESS}
        path: /volume1/Media/plex
        advancedMounts:
          main:
            main:
              - path: /data
                readOnly: false
      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn
        size: 20Gi
        advancedMounts:
          main:
            main:
              - path: /config
                readOnly: false
      # nas:
      #   enabled: true
      #   type: nfs
      #   server: ${NAS_ADDRESS}
      #   path: /volume2/plex_config
      #   advancedMounts:
      #     backup:
      #       main:
      #         - path: /nas
      #           readOnly: false
      #     main:
      #       loader:
      #         - path: /nas
      #           readOnly: false
          # main:
          #   main:
          #     - path: /config
          #       readOnly: false
      # copy:
      #   enabled: false
      #   type: emptyDir
      #   size: 50Gi
      #   advancedMounts:
      #     backup:
      #       main:
      #         - path: /copy
      #           readOnly: false
      #     main:
      #       main:
      #         - path: /config
      #           readOnly: false
      #       loader:
      #         - path: /copy
      #           readOnly: false
