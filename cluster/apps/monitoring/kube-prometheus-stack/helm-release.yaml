---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 43.2.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    fullnameOverride: prometheus
    alertmanager:
      enabled: false
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints:
        - 192.168.1.140
        - 192.168.1.142
        - 192.168.1.144
    kubeScheduler:
      enabled: true
      endpoints:
        - 192.168.1.140
        - 192.168.1.142
        - 192.168.1.144
    kubeProxy:
      enabled: true
      endpoints:
        - 192.168.1.140
        - 192.168.1.142
        - 192.168.1.144
    kubeEtcd:
      enabled: true
      endpoints:
        - 192.168.1.140
        - 192.168.1.142
        - 192.168.1.144
    prometheusOperator:
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 200m
            memory: 100Mi
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: traefik
        annotations:
          kubernetes.io/ingress.class: traefik 
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          hajimari.io/appName: "Prometheus"
          hajimari.io/enable: "true"
          hajimari.io/icon: "home-assistant"
        hosts:
          - "prometheus.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "prometheus.${SECRET_DOMAIN}"
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 10d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "nfs-client"
              resources:
                requests:
                  storage: 50Gi
